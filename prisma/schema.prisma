generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  avatarUrl String?  @default("https://avatar.iran.liara.run/public")
  role      String   @default("user")
  createdAt DateTime @default(now())
  
  // Profile Information
  profileCompleted Boolean @default(false)  // Whether user has filled profile info
  phone            String?
  address          String?
  city             String?
  province         String?
  postalCode       String?
  country          String? @default("Indonesia")

  products Product[]  @relation("UserProducts")
  cartItem cartItem[]

  Order Order[]
  @@map("users")
}

model Category {
  id        String      @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Parent-child relationship
  parentId  String?  @db.VarChar(25) // Foreign key to parent category (optional for root categories)
  parent    Category? @relation("CategoryTree", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryTree")
  
  products Product[]
  @@map("categories")
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String?
  price       Float
  salePrice   Float?      // Optional sale price
  stock       Int      @default(0)
  imageUrl    String?  // main image URL - deprecated in favor of ProductImage
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  categoryId  String? // foreign key ke Category

  user     User       @relation("UserProducts", fields: [userId], references: [id])
  category Category?  @relation(fields: [categoryId], references: [id])
  cartItem cartItem[]

  OrderItem    OrderItem[]
  ProductImage ProductImage[]
  @@map("products")
}

model ProductImage {
  id        String   @id @default(cuid())
  productId String
  imageUrl  String
  isMain    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  @@map("product_images")
}

model cartItem {
  id        String      @id @default(cuid())
  productId String
  userId    String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@unique([userId, productId], name: "user_product_unique")
  @@map("cart_items")
}

model Order {
  id        String      @id @default(cuid())
  userId        String
  total         Float
  status        String    @default("pending")
  paymentStatus String    @default("pending")
  paidAt        DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  user  User        @relation(fields: [userId], references: [id])
  items OrderItem[]
  @@map("orders")
}

model OrderItem {
  id        String      @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  @@map("order_items")
}
